idf_component_register(
  SRCS
  app_main.cpp
  INCLUDE_DIRS
  .
  ${CMAKE_BINARY_DIR}
  REQUIRES
  app_update
  bootloader_support
  driver
  esp_adc
  esp_app_format
  esp_http_server
  esp_wifi
  nvs_flash
  vfs)

target_compile_features(${COMPONENT_LIB} PUBLIC cxx_std_23)

target_common_warnings(${COMPONENT_LIB} PRIVATE)

target_compile_options(
  ${COMPONENT_LIB}
  PUBLIC
    "$<$<COMPILE_LANGUAGE:CXX>:-include;${CMAKE_CURRENT_SOURCE_DIR}/config.hpp>"
    -Wfatal-errors)

# ESP-IDF stuff is full of -Werror=format...
idf_build_set_property(
  COMPILE_OPTIONS
  "-Wno-error=all;-Wno-error=extra;-Wno-error=implicit-function-declaration;-Wno-error=format;-Wno-error=switch"
  APPEND)

cpmaddpackage("gh:ZIMO-Elektronik/ULF_COM@0.1.1")
cpmaddpackage("gh:ZIMO-Elektronik/ULF_DCC_EIN@0.5.0")
cpmaddpackage("gh:ZIMO-Elektronik/ULF_DECUP_EIN@0.0.0")
cpmaddpackage("gh:ZIMO-Elektronik/ULF_MDU_EIN@0.0.0")
cpmaddpackage("gh:ZIMO-Elektronik/ULF_SUSIV2@0.2.0")
cpmaddpackage("gh:ZIMO-Elektronik/ZUSI@0.9.2")
cpmaddpackage("gh:microsoft/GSL@4.2.0")
cpmaddpackage("gh:Neargye/magic_enum@0.9.7")

# According to this answer here https://stackoverflow.com/a/55312360/5840652
# magic enum works up to INT16_MAX
math(EXPR INT16_MAX "(1 << 15) - 1" OUTPUT_FORMAT DECIMAL)
target_compile_definitions(
  magic_enum INTERFACE MAGIC_ENUM_RANGE_MIN=0 MAGIC_ENUM_RANGE_MAX=${INT16_MAX})

# fmt install option does not play nice with ESP-IDF
cpmaddpackage(
  NAME
  fmt
  GITHUB_REPOSITORY
  fmtlib/fmt
  GIT_TAG
  11.2.0
  SYSTEM
  YES
  OPTIONS
  "FMT_INSTALL OFF"
  "FMT_OS OFF")

target_link_libraries(
  ${COMPONENT_LIB}
  PUBLIC fmt::fmt
         magic_enum::magic_enum
         Microsoft.GSL::GSL
         ULF::COM
         ULF::DCC_EIN
         ULF::DECUP_EIN
         ULF::MDU_EIN
         ULF::SUSIV2
         Z21::Z21
         ZUSI::ZUSI)

# Create NVS partition image
if(NOT IDF_TARGET STREQUAL linux)
  nvs_create_partition_image(nvs ../nvs.csv FLASH_IN_PROJECT)

  # Assembly listening takes forever, add custom target
  add_custom_target(
    FirmwareLst
    COMMAND ${CMAKE_OBJDUMP} --source --all-headers --demangle --line-numbers
            --wide ${CMAKE_PROJECT_NAME}.elf > ${CMAKE_PROJECT_NAME}.lst
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR})
  add_dependencies(FirmwareLst app)
endif()
